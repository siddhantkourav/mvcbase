@model baseproject.Models.RegisterViewModel
@{
    ViewBag.Title = "Create User";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("CreateUser", "AdminSetting", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("rolename", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("rolename", ViewBag.rolename as List<SelectListItem>, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

<table id="example" class="table table-hover table-striped table-bordered" width="100%">
    <thead class="thHead">
        <tr>
            <th>User Name</th>
            <th>Email</th>
            <th>Role</th>
            <th>Action</th>
        </tr>
    </thead>
</table>
<script>
    function BindDataTable() {
            var table = $('#example').DataTable();
            table.destroy();
        $('#example').DataTable({
            dom: 'frtip',
            pageLength: 200,
            language: {
                search: "",
                searchPlaceholder: "Search"
            },
            buttons: [
                {
                    extend: 'copyHtml5',
                    className: 'dtbutton-copy',
                    text: '<i class="fa fa-files-o"></i>',
                    titleAttr: 'Copy'
                },
                {
                    extend: 'excelHtml5',
                    className: 'dtbutton-excel',
                    text: '<i class="fa fa-file-excel-o"></i>',
                    titleAttr: 'Excel'
                },
                {
                    extend: 'csvHtml5',
                    className: 'dtbutton-csv',
                    text: '<i class="fa fa-file-text-o"></i>',
                    titleAttr: 'CSV'
                },
                {
                    extend: 'pdfHtml5',
                    className: 'dtbutton-pdf',
                    text: '<i class="fa fa-file-pdf-o"></i>',
                    titleAttr: 'PDF'
                },
                {
                    extend: 'print',
                    className: 'dtbutton-print',
                    text: '<i class="fa fa-print"></i>',
                    titleAttr: 'Print'
                },
            ],
            "ajax": {
                type: "POST",
                url: '@Url.Action("UserList", "AdminSetting")',
                datatype: "json",
                data: { id: "0" },
                dataSrc: ""
            },
            "sScrollX": "100%",
            "sScrollY": "333px",
            columns: [
                { data: "UserName", name: "UserName", autoWidth: true },
                { data: "Email", name: "Email", autoWidth: true },
                { data: "rolename", name: "rolename", autoWidth: true },
                {
                    data: "Id", "bSortable": false,
                    "render": function (data, type, row) {
                        if (row.rolename === 'Admin') {
                            return ""
                        } else {
                            return "<div class='action-btn '><a style='cursor:pointer' title='Delete' onclick='DeleteUser(\"" + row.Id + "\")' ><i class='fa fa-trash-o'></i> </a></div> "
                        }
                    }
                },
            ],
        });
    };

    function DeleteUser(id) {
        $("#dialog-confirm").dialog({
            resizable: false,
            height: "auto",
            width: 400,
            modal: true,
            buttons: {
                "Delete": function () {
                    debugger
                    console.log(id)
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("DeleteUser", "AdminSetting")',
                        data: { id: id },
                        /// contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            base.notificaton({ result: { title: '', MessageType: response.MessageType, Message: response.Message } });
                            setTimeout(() => {
                                window.location.reload(true);
                            }, 3000)
                        },
                        failure: function (response) {
                        },
                        error: function (response) {
                        }
                    });
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }

    $(document).ready(function(){
        BindDataTable()
    })
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
